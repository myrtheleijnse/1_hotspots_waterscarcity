for (i in seq(13,120, 12)) {
raster <- calc(clip[[i:(i+11)]], sum)
yearly_clip <- stack(yearly_clip, raster)
}
df <- data.frame(value = cellStats(yearly_clip, "sum"),
year = unique(as.numeric(format(strptime(getZ(clip), "%Y-%m-%d"), format = "%Y"))),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(yearly_clip, "sum")) #initialize
return (df)
}
### Reading Data ###
filelist <- list.files(path = "Indicators/Precipitation/", pattern = "\\.nc$", full.names=T, recursive = F)
### Execution ###
list_df_prcp <- lapply(filelist, function(x){ncdf_to_df_sum(x, shp_list, "pre", "Precipitation", "mm", 1)})
for (i in 2:length(shp_list)){
list_df_prcp_shp <- lapply(filelist, function(x){ncdf_to_df_sum(x, shp_list, "pre", "Precipitation", "mm", i)} )
list_df_prcp <- append(list_df_prcp, list_df_prcp_shp)
print(i)
}
df_prcp <- do.call("rbind", list_df_prcp)
df_prcp <- df_prcp[df_prcp$year >= 1960 & df_prcp$year <= 2019,]
rownames(df_prcp) <- seq(1,nrow(df_prcp),1)
for (j in seq(1,nrow(df_prcp),60)){
for (i in j:(j+(length(shp_list)))){
df_prcp$value.ref[i] <- df_prcp$value[i]/df_prcp$value[j]
}
}
View(df_prcp)
ncinput = "Indicators/Precipitation/cru_ts4.06.2011.2020.pre.dat.nc"
shp = shp_list
varname = "pre"
variable = "Precipitation"
unit = " mm"
shpcount = 2
b <- brick(ncinput, varname = varname)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
yearly_clip <- calc(clip[[1:12]], sum)
for (i in seq(13,120, 12)) {
raster <- calc(clip[[i:(i+11)]], sum)
yearly_clip <- stack(yearly_clip, raster)
}
plot(yearly_clip)
### Functions ###
ncdf_to_df_mean <- function(ncinput, shp, varname, variable, unit, shpcount){
b <- brick(ncinput, varname = varname)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
yearly_clip <- calc(clip[[1:12]], sum)
for (i in seq(13,120, 12)) {
raster <- calc(clip[[i:(i+11)]], sum)
yearly_clip <- stack(yearly_clip, raster)
}
df <- data.frame(value = cellStats(yearly_clip, "mean"),
year = unique(as.numeric(format(strptime(getZ(clip), "%Y-%m-%d"), format = "%Y"))),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(yearly_clip, "mean")) #initialize
return (df)
}
### Functions ###
ncdf_to_df_mean <- function(ncinput, shp, varname, variable, unit, shpcount){
b <- brick(ncinput, varname = varname)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
yearly_clip <- calc(clip[[1:12]], sum)
for (i in seq(13,120, 12)) {
raster <- calc(clip[[i:(i+11)]], sum)
yearly_clip <- stack(yearly_clip, raster)
}
df <- data.frame(value = cellStats(yearly_clip, "mean"),
year = unique(as.numeric(format(strptime(getZ(clip), "%Y-%m-%d"), format = "%Y"))),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(yearly_clip, "mean")) #initialize
return (df)
}
### Execution ###
list_df_prcp <- lapply(filelist, function(x){ncdf_to_df_mean(x, shp_list, "pre", "Precipitation", "mm/y", 1)})
for (i in 2:length(shp_list)){
list_df_prcp_shp <- lapply(filelist, function(x){ncdf_to_df_mean(x, shp_list, "pre", "Precipitation", "mm/y", i)} )
list_df_prcp <- append(list_df_prcp, list_df_prcp_shp)
print(i)
}
df_prcp <- do.call("rbind", list_df_prcp)
df_prcp <- df_prcp[df_prcp$year >= 1960 & df_prcp$year <= 2019,]
rownames(df_prcp) <- seq(1,nrow(df_prcp),1)
for (j in seq(1,nrow(df_prcp),60)){
for (i in j:(j+(length(shp_list)))){
df_prcp$value.ref[i] <- df_prcp$value[i]/df_prcp$value[j]
}
}
seq(1,nrow(df_prcp),60)
for (j in seq(1,nrow(df_prcp),60)){
for (i in j:(j+59)){
df_prcp$value.ref[i] <- df_prcp$value[i]/df_prcp$value[j]
}
}
### Write CSV ###
write.csv(df_prcp, "Indicators/Indicator_tables/CRU_prcp_1960_2019.csv", row.names=F)
df_prcp <- read.csv("Indicators/Indicator_tables/CRU_prcp_1960_2019.csv")
relative_spaghetti_plot(df_prcp,
"Precipitation (mm/y)",
"Annual mean precipitation per hotspot",
"Relative precipitation",
"Annual mean precipitation per hotspot relative to ",
1960, 2019)
### Libraries ###
library(sf)
library(viridis)
library(hrbrthemes)
library(gghighlight)
library(raster)
library(gridExtra)
library(maptools)
### Functions ###
relative_spaghetti_plot <- function(df, ylab_abs, title_abs, ylab_rel, title_rel, startyear, endyear) {
grid.arrange(
ggplot(df, aes(year, value, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(max(value)>-2) +
scale_color_viridis_d(option = "H") +
scale_x_discrete(breaks=seq(startyear, endyear, 2)) +
ylab(ylab_abs) +
ggtitle(title_abs) +
theme_ipsum(axis_title_size = 12),
ggplot(df, aes(year, value.ref, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(max(value)>-2) +
scale_color_viridis_d(option = "H") +
scale_x_discrete(breaks=seq(2001, 2010, 2)) +
ylab(ylab_rel) +
ggtitle(paste0(title_rel, startyear)) +
theme_ipsum(axis_title_size = 12),
nrow = 1
)
}
spaghetti_plot <- function(df, ylab_abs, title_abs, startyear, endyear) {
ggplot(df, aes(year, value, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(hotspot == "California") +
scale_color_viridis_d(option = "H") +
#scale_x_discrete(breaks=seq(startyear, endyear, 2)) +
ylab(ylab_abs) +
ggtitle(title_abs) +
theme_ipsum(axis_title_size = 12)
}
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/Data")
df_prcp <- read.csv("Indicators/Indicator_tables/CRU_prcp_1960_2019.csv")
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/Data")
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/data")
setwd("E:/")
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/data")
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots")
### Reading Data ###
# shapefiles
setwd("E:\1_waterscarcity_hotspots")
### Reading Data ###
# shapefiles
setwd("~/1_waterscarcity_hotspots")
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/Data")
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/Data")
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/Data")
getwd()
### Reading Data ###
# shapefiles
setwd("E:/1_waterscarcity_hotspots/Data")
getwd()
setwd("E:/")
### Reading Data ###
# shapefiles
setwd("E:/1_hotspots_waterscarcity/Data")
ff <- list.files("Water_provinces/Hotspot_Shapefiles/", pattern="\\.shp$", full.names=T)
shp_list <- lapply(ff, shapefile)
library(sf)
library(viridis)
library(hrbrthemes)
library(gghighlight)
library(raster)
library(gridExtra)
library(maptools)
### Functions ###
relative_spaghetti_plot <- function(df, ylab_abs, title_abs, ylab_rel, title_rel, startyear, endyear) {
grid.arrange(
ggplot(df, aes(year, value, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(max(value)>-2) +
scale_color_viridis_d(option = "H") +
scale_x_discrete(breaks=seq(startyear, endyear, 2)) +
ylab(ylab_abs) +
ggtitle(title_abs) +
theme_ipsum(axis_title_size = 12),
ggplot(df, aes(year, value.ref, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(max(value)>-2) +
scale_color_viridis_d(option = "H") +
scale_x_discrete(breaks=seq(2001, 2010, 2)) +
ylab(ylab_rel) +
ggtitle(paste0(title_rel, startyear)) +
theme_ipsum(axis_title_size = 12),
nrow = 1
)
}
spaghetti_plot <- function(df, ylab_abs, title_abs, startyear, endyear) {
ggplot(df, aes(year, value, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(hotspot == "California") +
scale_color_viridis_d(option = "H") +
#scale_x_discrete(breaks=seq(startyear, endyear, 2)) +
ylab(ylab_abs) +
ggtitle(title_abs) +
theme_ipsum(axis_title_size = 12)
}
### Reading Data ###
# shapefiles
setwd("E:/1_hotspots_waterscarcity/Data")
ff <- list.files("Water_provinces/Hotspot_Shapefiles/", pattern="\\.shp$", full.names=T)
shp_list <- lapply(ff, shapefile)
hotspots <- c("Irrawaddy", "California", "ChaoPhraya", "Chile", "China", "Euphrates", "Ganges", "Indus", "Japan", "Java", "Jordan",
"Mekong", "Mexico", "MurrayDarling", "Nile", "Rhine", "Spain", "Sudan", "USHighPlains")
names(shp_list) = hotspots
df_prcp <- read.csv("Indicators/Indicator_tables/CRU_prcp_1960_2019.csv")
relative_spaghetti_plot(df_prcp,
"Precipitation (mm/y)",
"Annual mean precipitation per hotspot",
"Relative precipitation",
"Annual mean precipitation per hotspot relative to ",
1960, 2019)
### Functions ###
relative_spaghetti_plot <- function(df, ylab_abs, title_abs, ylab_rel, title_rel, startyear, endyear) {
grid.arrange(
ggplot(df, aes(year, value, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(max(value)>-2) +
scale_color_viridis_d(option = "H") +
#scale_x_discrete(breaks=seq(startyear, endyear, 2)) +
ylab(ylab_abs) +
ggtitle(title_abs) +
theme_ipsum(axis_title_size = 12),
ggplot(df, aes(year, value.ref, group=hotspot, colour = hotspot)) +
geom_line(lwd=1.5) +
gghighlight(max(value)>-2) +
scale_color_viridis_d(option = "H") +
#scale_x_discrete(breaks=seq(2001, 2010, 2)) +
ylab(ylab_rel) +
ggtitle(paste0(title_rel, startyear)) +
theme_ipsum(axis_title_size = 12),
nrow = 1
)
}
relative_spaghetti_plot(df_prcp,
"Precipitation (mm/y)",
"Annual mean precipitation per hotspot",
"Relative precipitation",
"Annual mean precipitation per hotspot relative to ",
1960, 2019)
setwd("E:/1_waterscarcity_hotspots/Data")
setwd("E:/1_hotspots_waterscarcity/Data")
nc_open("Indicators/waterqual/organic_yearlyAvg_2010_2019.nc")
library(ncdf4)
nc_open("Indicators/waterqual/organic_yearlyAvg_2010_2019.nc")
plot(brick("Indicators/waterqual/organic_yearlyAvg_2010_2019.nc"))
ncinput <- "Indicators/waterqual/organic_yearlyAvg_2010_2019.nc"
shp <- shp_list
variable <- "BOD"
unit <- "mg/L"
shpcount <- 2
b <- brick(ncinput)
ncinput <- "Indicators/waterqual/organic_yearlyAvg_1980_2019.nc"
b <- brick(ncinput)
plot(b)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
plot(clip)
### Functions ###
nc_to_df_mean <- function(ncinput, shp, variable, unit, shpcount){
b <- brick(ncinput)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
df <- data.frame(value = cellStats(clip, "mean"),
year = seq(1980, 2019, 1),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(clip, "mean")) #initialize
for (i in 1:nrow(df)){
df$value.ref[i] <- df$value[1]/df$value[i]
}
return (df)
}
### Functions ###
nc_to_df_mean <- function(ncinput, shp, variable, unit, shpcount){
b <- brick(ncinput)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
df <- data.frame(value = cellStats(clip, "mean"),
year = seq(1980, 2019, 1),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(clip, "mean")) #initialize
for (i in 1:nrow(df)){
df$value.ref[i] <- df$value[1]/df$value[i]
}
return (df)
}
### Reading Data ###
df_organic <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_2010_2019.nc", shp_list, "BOD", "mg/L", 1)
### Functions ###
ncdf_to_df_mean <- function(ncinput, shp, variable, unit, shpcount){
b <- brick(ncinput)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
df <- data.frame(value = cellStats(clip, "mean"),
year = seq(1980, 2019, 1),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(clip, "mean")) #initialize
for (i in 1:nrow(df)){
df$value.ref[i] <- df$value[1]/df$value[i]
}
return (df)
}
### Reading Data ###
df_organic <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_2010_2019.nc", shp_list, "BOD", "mg/L", 1)
nlayers(b)
length(seq(1980,2019,1))
### Reading Data ###
df_organic <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_1980_2019.nc", shp_list, "BOD", "mg/L", 1)
df_organic
View(df_organic)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_1980_2019.nc", shp_list, "BOD", "mg/L", i)
df_organic <- rbind(df_organic, df)
}
df_watTemp <- ncdf_to_df_mean("Indicators/waterqual/watTemperature_yearlyAvg_1980_2019.nc", shp_list, "Water temperature", "°C", 1)
df_watTemp <- ncdf_to_df_mean("Indicators/waterqual/waterTemperature_yearlyAvg_1980_2019.nc", shp_list, "Water temperature", "°C", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/waterTemperature_yearlyAvg_1980_2019.nc", shp_list, "Water temperature", "°C", i)
df_watTemp <- rbind(df_watTemp, df)
}
df_pathogen <- ncdf_to_df_mean("Indicators/waterqual/pathogen_yearlyAvg_1980_2019.nc", shp_list, "FC", "cfu/100ml", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/pathogen_yearlyAvg_1980_2019.nc", shp_list, "FC", "cfu/100ml", i)
df_pathogen <- rbind(df_pathogen, df)
}
df_salinity <- ncdf_to_df_mean("Indicators/waterqual/salinity_yearlyAvg_1980_2019.nc", shp_list, "TDS", "mg/L", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/salinity_yearlyAvg_1980_2019.nc", shp_list, "TDS", "mg/L", i)
df_salinity <- rbind(df_salinity, df)
}
df_waterQual <- rbind(df_organic, df_watTemp, df_pathogen, df_salinity)
View(df_waterQual)
View(df_organic)
rownames(df_organic) <- NULL
### Functions ###
ncdf_to_df_mean <- function(ncinput, shp, variable, unit, shpcount){
b <- brick(ncinput)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
df <- data.frame(value = cellStats(clip, "mean"),
year = seq(1980, 2019, 1),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(clip, "mean")) #initialize
for (i in 1:nrow(df)){
df$value.ref[i] <- df$value[1]/df$value[i]
}
rownames(df) <- NULL
return (df)
}
### Reading Data ###
df_organic <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_1980_2019.nc", shp_list, "BOD", "mg/L", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_1980_2019.nc", shp_list, "BOD", "mg/L", i)
df_organic <- rbind(df_organic, df)
}
df_watTemp <- ncdf_to_df_mean("Indicators/waterqual/waterTemperature_yearlyAvg_1980_2019.nc", shp_list, "Water temperature", "°C", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/waterTemperature_yearlyAvg_1980_2019.nc", shp_list, "Water temperature", "°C", i)
df_watTemp <- rbind(df_watTemp, df)
}
df_pathogen <- ncdf_to_df_mean("Indicators/waterqual/pathogen_yearlyAvg_1980_2019.nc", shp_list, "FC", "cfu/100ml", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/pathogen_yearlyAvg_1980_2019.nc", shp_list, "FC", "cfu/100ml", i)
df_pathogen <- rbind(df_pathogen, df)
}
df_salinity <- ncdf_to_df_mean("Indicators/waterqual/salinity_yearlyAvg_1980_2019.nc", shp_list, "TDS", "mg/L", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/salinity_yearlyAvg_1980_2019.nc", shp_list, "TDS", "mg/L", i)
df_salinity <- rbind(df_salinity, df)
}
df_waterQual <- rbind(df_organic, df_watTemp, df_pathogen, df_salinity)
relative_spaghetti_plot(df_organic,
"Biological oxygen demand (mg/L)",
"Annual mean BOD per hotspot",
"Relative Biological oxygen demand",
"Annual mean BOD per hotspot relative to ",
1980, 2019)
relative_spaghetti_plot(df_watTemp,
"Water temperature (°C)",
"Annual mean water temperature per hotspot",
"Relative water temperature",
"Annual mean water temperature per hotspot relative to ",
1980, 2019)
relative_spaghetti_plot(df_pathogen,
"Fecal coliform concentration (cfu/100ml)",
"Annual mean pathogen concentration per hotspot",
"Relative fecal coliform concentration",
"Annual mean  per hotspot relative to ",
1980, 2019)
relative_spaghetti_plot(df_salinity,
"Total dissolved solids (mg/L)",
"Annual mean TDS per hotspot",
"Relative total dissolved solids",
"Annual mean TDS per hotspot relative to ",
1980, 2019)
relative_spaghetti_plot(df_pathogen,
"Fecal coliform concentration (cfu/100ml)",
"Annual mean pathogen concentration per hotspot",
"Relative fecal coliform concentration",
"Annual mean pathogen concentration per hotspot relative to ",
1980, 2019)
View(df_watTemp)
### Functions ###
ncdf_to_df_mean <- function(ncinput, shp, variable, unit, shpcount){
b <- brick(ncinput)
clip <- mask(crop(b, extent(shp[[shpcount]])), shp[[shpcount]])
df <- data.frame(value = cellStats(clip, "mean"),
year = seq(1980, 2019, 1),
variable = variable,
unit = unit,
hotspot = names(shp[shpcount]),
value.ref = cellStats(clip, "mean")) #initialize
for (i in 1:nrow(df)){
df$value.ref[i] <- df$value[i]/df$value[1]
}
rownames(df) <- NULL
return (df)
}
### Execution ###
df_organic <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_1980_2019.nc", shp_list, "BOD", "mg/L", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/organic_yearlyAvg_1980_2019.nc", shp_list, "BOD", "mg/L", i)
df_organic <- rbind(df_organic, df)
}
df_watTemp <- ncdf_to_df_mean("Indicators/waterqual/waterTemperature_yearlyAvg_1980_2019.nc", shp_list, "Water temperature", "°C", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/waterTemperature_yearlyAvg_1980_2019.nc", shp_list, "Water temperature", "°C", i)
df_watTemp <- rbind(df_watTemp, df)
}
df_pathogen <- ncdf_to_df_mean("Indicators/waterqual/pathogen_yearlyAvg_1980_2019.nc", shp_list, "FC", "cfu/100ml", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/pathogen_yearlyAvg_1980_2019.nc", shp_list, "FC", "cfu/100ml", i)
df_pathogen <- rbind(df_pathogen, df)
}
df_salinity <- ncdf_to_df_mean("Indicators/waterqual/salinity_yearlyAvg_1980_2019.nc", shp_list, "TDS", "mg/L", 1)
for (i in 2:length(shp_list)){
df <- ncdf_to_df_mean("Indicators/waterqual/salinity_yearlyAvg_1980_2019.nc", shp_list, "TDS", "mg/L", i)
df_salinity <- rbind(df_salinity, df)
}
df_waterQual <- rbind(df_organic, df_watTemp, df_pathogen, df_salinity)
relative_spaghetti_plot(df_organic,
"Biological oxygen demand (mg/L)",
"Annual mean BOD per hotspot",
"Relative biological oxygen demand",
"Annual mean BOD per hotspot relative to ",
1980, 2019)
relative_spaghetti_plot(df_watTemp,
"Water temperature (°C)",
"Annual mean water temperature per hotspot",
"Relative water temperature",
"Annual mean water temperature per hotspot relative to ",
1980, 2019)
relative_spaghetti_plot(df_pathogen,
"Fecal coliform concentration (cfu/100ml)",
"Annual mean pathogen concentration per hotspot",
"Relative fecal coliform concentration",
"Annual mean pathogen concentration per hotspot relative to ",
1980, 2019)
relative_spaghetti_plot(df_salinity,
"Total dissolved solids (mg/L)",
"Annual mean TDS per hotspot",
"Relative total dissolved solids",
"Annual mean TDS per hotspot relative to ",
1980, 2019)
write.csv(df_watergap, "Indicators/Indicator_tables/DynQual_organic_1980_2019.csv", row.names=F)
write.csv(df_organic, "Indicators/Indicator_tables/DynQual_organic_1980_2019.csv", row.names=F)
write.csv(df_watTemp, "Indicators/Indicator_tables/DynQual_waterTemperature_1980_2019.csv", row.names=F)
write.csv(df_pathogen, "Indicators/Indicator_tables/DynQual_pathogen_1980_2019.csv", row.names=F)
write.csv(df_salinity, "Indicators/Indicator_tables/DynQual_salinity_1980_2019.csv", row.names=F)
write.csv(df_waterQual, "Indicators/Indicator_tables/DynQual_waterQuality_1980_2019.csv", row.names=F)
df_organic <- read.csv("Indicators/Indicator_tables/DynQual_organic_1980_2019.csv")
df_watTemp <- read.csv("Indicators/Indicator_tables/DynQual_waterTemperature_1980_2019.csv")
df_pathogen <- read.csv("Indicators/Indicator_tables/DynQual_pathogen_1980_2019.csv")
df_salinity <- read.csv("Indicators/Indicator_tables/DynQual_salintiy_1980_2019.csv")
df_salinity <- read.csv("Indicators/Indicator_tables/DynQual_salinity_1980_2019.csv")
View(df_organic)
