# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -7, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -1, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -3, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -3.5, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -4, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -5, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -4.5, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
#subset region
for(i in 1:length(hotspots_list)) {
print(i)
df <- df_DPSIR
df <- df[df$region == hotspots_list[i],]
df <- df[df$values != 0, ] # remove 0 values
#circular barplot
##### circular barplot ######
df <- df %>%
group_split(DPSIR) %>%
map_dfr(~ add_row(.x, .after = Inf)) # add empty row for id
df$id <- seq(1, nrow(df)) # set id of rows
label_data <- df
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar
label_data$hjust <- ifelse(angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle + 180, angle)
# prepare a data frame for grid lines
grid_data <- df %>%
group_by(DPSIR) %>%
summarize(start = min(id), end = max(id) - 1) %>%
rowwise() %>%
mutate(title = mean(c(start, end)))
grid_data$end <- grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1
grid_data$start <- grid_data$start - 1
# normalize by number of papers
nrpapers <- nrow(driver_sheet[driver_sheet$Hotspot == hotspots_list[i], ]) - nrow(driver_sheet[driver_sheet$Hotspot == "NA", ])
maxindicators <- max(df$values, na.rm = T)
axisbreaks <- c(maxindicators, maxindicators * 0.8, maxindicators * 0.6, maxindicators * 0.4, maxindicators * 0.2, 0)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -4.5, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
}
circular_barplot_minimalist <- function(df){
#subset region
for(i in 1:length(hotspots_list)) {
df <- df[df$region == hotspots_list[i],]
df <- df[df$values != 0, ] # remove 0 values
#circular barplot
##### circular barplot ######
df <- df %>%
group_split(DPSIR) %>%
map_dfr(~ add_row(.x, .after = Inf)) # add empty row for id
df$id <- seq(1, nrow(df)) # set id of rows
label_data <- df
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar
label_data$hjust <- ifelse(angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle + 180, angle)
# prepare a data frame for grid lines
grid_data <- df %>%
group_by(DPSIR) %>%
summarize(start = min(id), end = max(id) - 1) %>%
rowwise() %>%
mutate(title = mean(c(start, end)))
grid_data$end <- grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1
grid_data$start <- grid_data$start - 1
# normalize by number of papers
nrpapers <- nrow(driver_sheet[driver_sheet$Hotspot == hotspots_list[i], ]) - nrow(driver_sheet[driver_sheet$Hotspot == "NA", ])
maxindicators <- max(df$values, na.rm = T)
axisbreaks <- c(maxindicators, maxindicators * 0.8, maxindicators * 0.6, maxindicators * 0.4, maxindicators * 0.2, 0)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -4.5, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
}
}
circular_barplot_all(df_DPSIR, hotspots_list)
circular_barplot_all <- function(df, hotspots_list){
#subset region
for(i in 1:length(hotspots_list)) {
df <- df[df$region == hotspots_list[i],]
df <- df[df$values != 0, ] # remove 0 values
#circular barplot
##### circular barplot ######
df <- df %>%
group_split(DPSIR) %>%
map_dfr(~ add_row(.x, .after = Inf)) # add empty row for id
df$id <- seq(1, nrow(df)) # set id of rows
label_data <- df
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar
label_data$hjust <- ifelse(angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle + 180, angle)
# prepare a data frame for grid lines
grid_data <- df %>%
group_by(DPSIR) %>%
summarize(start = min(id), end = max(id) - 1) %>%
rowwise() %>%
mutate(title = mean(c(start, end)))
grid_data$end <- grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1
grid_data$start <- grid_data$start - 1
# normalize by number of papers
nrpapers <- nrow(driver_sheet[driver_sheet$Hotspot == hotspots_list[i], ]) - nrow(driver_sheet[driver_sheet$Hotspot == "NA", ])
maxindicators <- max(df$values, na.rm = T)
axisbreaks <- c(maxindicators, maxindicators * 0.8, maxindicators * 0.6, maxindicators * 0.4, maxindicators * 0.2, 0)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -4.5, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
}
}
### Plotting ###
circular_barplot_all(df_DPSIR, hotspots_list)
circular_barplot_all <- function(df_DPSIR, hotspots_list){
#subset region
for(i in 1:length(hotspots_list)) {
df <- df_DPSIR
df <- df[df$region == hotspots_list[i],]
df <- df[df$values != 0, ] # remove 0 values
#circular barplot
##### circular barplot ######
df <- df %>%
group_split(DPSIR) %>%
map_dfr(~ add_row(.x, .after = Inf)) # add empty row for id
df$id <- seq(1, nrow(df)) # set id of rows
label_data <- df
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar
label_data$hjust <- ifelse(angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle + 180, angle)
# prepare a data frame for grid lines
grid_data <- df %>%
group_by(DPSIR) %>%
summarize(start = min(id), end = max(id) - 1) %>%
rowwise() %>%
mutate(title = mean(c(start, end)))
grid_data$end <- grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1
grid_data$start <- grid_data$start - 1
# normalize by number of papers
nrpapers <- nrow(driver_sheet[driver_sheet$Hotspot == hotspots_list[i], ]) - nrow(driver_sheet[driver_sheet$Hotspot == "NA", ])
maxindicators <- max(df$values, na.rm = T)
axisbreaks <- c(maxindicators, maxindicators * 0.8, maxindicators * 0.6, maxindicators * 0.4, maxindicators * 0.2, 0)
# plot with image size of at least 2000x2000
print(ggplot(data = df, aes(x = as.factor(id), y = values, fill = DPSIR)) +
geom_bar(stat = "identity", alpha = 0.3) +
# Add a val=0,2,4,6,8,10 lines
geom_segment(data = grid_data, aes(x = end, y = maxindicators, xend = start, yend = maxindicators), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.8, xend = start, yend = maxindicators * 0.8), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.6, xend = start, yend = maxindicators * 0.6), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.4, xend = start, yend = maxindicators * 0.4), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = maxindicators * 0.2, xend = start, yend = maxindicators * 0.2), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha = 1, size = 0.3, inherit.aes = FALSE) +
# Add text showing the value of each 0,2,4,6,8,10 lines
annotate("text",
x = rep(max(df$id), 6), y = c(axisbreaks),
label = rev(c(round(seq(0, maxindicators / nrpapers * 100, 0.2 * maxindicators / nrpapers * 100), 0))),
color = "grey", size = 6, angle = 0, fontface = "bold", hjust = 0
) +
annotate("text", x = 0, y = -4.5, label = hotspots_list[i], size = 6) +
geom_bar(aes(x = as.factor(id), y = values, fill = DPSIR), stat = "identity", alpha = 0.3) +
ylim(-5, maxindicators) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1, 5), "cm"),
legend.title = element_text(size = 30),
legend.text = element_text(size = 29),
legend.position = "bottomright",
rect = element_rect(fill = "transparent")
) +
coord_polar(start = 0) +
geom_text(
data = label_data, aes(x = id, y = values, label = indicator, hjust = hjust),
color = "black", angle = label_data$angle, inherit.aes = F, size = 6
) # 12
)
}
}
### Plotting ###
circular_barplot_all(df_DPSIR, hotspots_list)
